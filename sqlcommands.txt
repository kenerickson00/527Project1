Command for creating the MyCube table, including the ThisQuarter column.

select
    Date_Part(year,OrderDate) as ThisYear
    ,concat('Q',Date_Part(quarter,OrderDate)) as ThisQuarter
    ,[Order_ShipCountry] as Region
    ,[ProductName] as Product
    ,[Order_Amount] as Sales
into
    MyCube
from
    ABC_Retail_Fact_Table
where
    [Order_ShipCountry] in ('USA','Canada','UK')
    and [ProductName] in ('Chai','Tofu','Chocolade')


Below are the updated olap commands that work on our server.

-- table
select * from MyCube order by 1,2,3

-- pivot 1
select case when 1=1 then 'Sales' end as Product, sum(case when ThisQuarter='Q1' then Sales else 0 end) as Q1,
sum(case when ThisQuarter='Q2' then Sales else 0 end) as Q2, sum(case when ThisQuarter='Q3' then Sales else 0 end)
as Q3, sum(case when ThisQuarter='Q4' then Sales else 0 end) as Q4 from MyCube

-- pivot 2
select case when 1=1 then 'Sales' end as Region, sum(case when ThisQuarter='Q1' then Sales else 0 end) as Q1,
sum(case when ThisQuarter='Q2' then Sales else 0 end) as Q2, sum(case when ThisQuarter='Q3' then Sales else 0 end)
as Q3, sum(case when ThisQuarter='Q4' then Sales else 0 end) as Q4 from MyCube

-- pivot 3
select case when 1=1 then 'Sales' end as Product, case when 1=1 then 'Sales' end as Region, sum(case when ThisQuarter='Q1' then Sales else 0 end) as Q1,
sum(case when ThisQuarter='Q2' then Sales else 0 end) as Q2, sum(case when ThisQuarter='Q3' then Sales else 0 end)
as Q3, sum(case when ThisQuarter='Q4' then Sales else 0 end) as Q4 from MyCube

-- slicing
select * from MyCube where ThisQuarter='Q1'

-- dicing
select * from MyCube where ThisQuarter='Q1' and region='Europe'

-- group by with rollup
SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, GROUPING(ThisQuarter) AS 'Grouping'
FROM MyCube
GROUP BY ThisQuarter, Region, Product with rollup
ORDER BY 1,2,3

SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, cast(NULL as INT) AS ThisQuarter AS 'Grouping'
FROM MyCube
GROUP BY ThisQuarter
UNION
SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, cast(NULL as INT) AS ThisQuarter AS 'Grouping'
FROM MyCube
GROUP BY Region
UNION
SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, cast(NULL as INT) AS ThisQuarter AS 'Grouping'
FROM MyCube
GROUP BY Product
UNION
ORDER BY 1,2,3

-- group by with cube
SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, GROUPING(ThisQuarter) AS 'Grouping'
FROM MyCube
GROUP BY ThisQuarter, Region, Product with cube
ORDER BY 1,2,3

SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, cast(NULL as INT) AS ThisQuarter AS 'Grouping'
FROM MyCube
GROUP BY ThisQuarter, Region
UNION
SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, cast(NULL as INT) AS ThisQuarter AS 'Grouping'
FROM MyCube
GROUP BY ThisQuarter, Product
Union
SELECT ThisQuarter, Region, Product, SUM(Sales) as TotalSales--, cast(NULL as INT) AS ThisQuarter AS 'Grouping'
FROM MyCube
GROUP BY Product, Region
Order By 1,2,3

-- group by grouping sets
SELECT ThisQuarter, NULL as Region, SUM(Sales) as TotalSales FROM MyCube GROUP BY ThisQuarter
UNION ALL
SELECT NULL, Region, SUM(Sales) as TotalSales FROM MyCube GROUP BY Region
ORDER BY 1,2

-- Ranking
SELECT
	Product, Sales
	, RANK() OVER (ORDER BY Sales ASC) as RANK_SALES
	, DENSE_RANK() OVER (ORDER BY Sales ASC) as DENSE_RANK_SALES
	, PERCENT_RANK() OVER (ORDER BY Sales ASC) as PERC_RANK_SALES
	, CUME_DIST() OVER (ORDER BY Sales ASC) as CUM_DIST_SALES
FROM
	MyCube
ORDER BY
	RANK_SALES ASC

-- Windowing 1
SELECT ThisQuarter, Region, Sales,
AVG(Sales) OVER (PARTITION BY Region ORDER BY ThisQuarter ROWS BETWEEN 0 PRECEDING AND 0 FOLLOWING) AS Sales_Avg
FROM
	MyCube
ORDER BY
	Region, ThisQuarter, Sales_Avg

-- Windowing 2
SELECT ThisQuarter, Region, Sales,
AVG(Sales) OVER (PARTITION BY Region ORDER BY ThisQuarter ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS Sales_Avg
FROM
	MyCube
ORDER BY
	Region, ThisQuarter, Sales_Avg
